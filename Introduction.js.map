{"version":3,"sources":["webpack:///./docs/pages/Introduction.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","_router","OptionalLink","_ref","currentPage","props","_objectWithoutProperties","to","includes","default","createElement","_extends","href","path","join","Link","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","e","bind","_jsx","className","_ref4","_ref5","_ref6","id","aria-hidden","_ref7"],"mappings":"2JAEM,MAAAA,EAAAC,EAAAC,EAAA,IACAC,ySAAAC,CAAAF,EAAA,IAEAG,GADAJ,EAAAC,EAAA,IACAA,EAAA,IAsDFD,EAAAC,EAAA,smCAnDF,MAAMI,EAAeC,IAA+B,IAA9BC,YAAEA,GAA4BD,EAAZE,EAAYC,EAAAH,GAAA,gBAC9CI,EAAKF,EAAME,GAEf,OAAIA,EAAGC,SAAS,QACPT,EAAAU,QAAAC,cAAA,IAAAC,KAAON,GAAOO,KAAML,MAGf,MAAVA,EAAG,KACLA,EAAKM,UAAKC,KAAK,WAAW,2BAA6BP,GAGlDR,EAAAU,QAAAC,cAACT,EAAAc,KAADJ,KAAUN,GAAOD,YAAaA,EAAaG,GAAIA,OAuFxD,MAAMS,EAAgBC,IAAA,IAAAC,EAAAC,EAAA,OAAAA,EAAAD,gBACNE,UAAMC,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,KAAA,SAM1BC,KAAM,OAGRC,qBACOF,KAAKG,MAAMF,MAAQD,KAAKrB,MAAMyB,YACjCb,IAAWc,KAAKC,IACdN,KAAKO,UACHN,KAAMK,EAAEvB,YAMhByB,SACE,MAAMP,KAAEA,GAASD,KAAKG,MACtB,OAAOF,EAAOP,UAAMV,cAAciB,EAAMD,KAAKrB,MAAO,MAAQ,OAtB5CoB,EAAAP,EAAA,gBAGhBY,YAAY,IAHIX,GA2BLH,EAAc,IAAMlB,EAAAqC,EAAA,IAAAJ,KAAAjC,EAAAsC,KAAA,WACdpB,EAAc,IAAMlB,EAAAqC,EAAA,IAAAJ,KAAAjC,EAAAsC,KAAA,iBAMnCC,EAAA,qDACVA,EAAA,4DACAA,EAAA,sFAEAA,EAAA,eACAA,EAAA,4EACAA,EAAA,gGACAA,EAAA,mFAAqEA,EAAA,gCAArE,YACAA,EAAA,yCAXyBhC,GACnBgC,EAAA,OAAKC,UAAWjC,EAAMiC,gBAAtB,EACED,EAAA,oBAAAE,EAAAC,EAAAC,EAIRJ,EAAA,MAAIK,GAAG,iBAAP,cAA2BL,EAACnC,GAAaE,YAAoCC,EAAOD,YAAakC,UAAU,4BAA4B/B,GAAG,YAAYoC,cAAY,UAJ1JC","file":"Introduction.js","sourcesContent":["\n    \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n      import { Link } from '@reach/router';\n\n      \n  const OptionalLink = ({ currentPage, ...props }) => {\n    let to = props.to;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/Ignite/','pages/Introduction.html') + to;\n    }\n\n    return <Link {...props} currentPage={currentPage} to={to} />;\n  };\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : null;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n    \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>ðŸ”¥ Ignite ðŸ”¥</h1>\n<p>Modern markdown documentation generator.</p>\n<p>Ignite makes it super easy to get a documentation website running.</p>\n<h2 id=\"features\">Features <OptionalLink currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#features\" aria-hidden=\"true\"></OptionalLink></h2>\n<ul>\n<li>Easy Setup - define an index file and get to documenting!</li>\n<li>Themeable - Easily change the overall look of your app or just change 1 value</li>\n<li>Plugins - Extend any part of documentation generation or use any <code>markdown-it</code> plugin.</li>\n<li>Easy Publishing</li>\n</ul>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n  "],"sourceRoot":""}