{"version":3,"sources":["webpack:///./docs/pages/ProjectStructure.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","_ref6","currentPage","_ref7","id","aria-hidden","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18"],"mappings":"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","file":"ProjectStructure.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/Ignite/','pages/ProjectStructure.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Index Structure</h1>\n<p>Ignite builds the app from your side bar. Here is where your organize your documentation into overall ideas.</p>\n<p><br/></p>\n<p>The default configuration looks for a file named <code>index.md</code> in your <code>docs/</code> directory. This file links to the rest of your documentation. Any linked <code>.md</code> files will be included in the docs website.</p>\n<p><strong><em>Changing the <Link currentPage={(this && this.props || props).currentPage} to=\"/Ignite/pages/Options.html#source-src-s\">default configuration</Link></em></strong></p>\n<pre><code className=\"language-markdown\"><span className=\"hljs-bullet\">- </span>[<span className=\"hljs-string\">Introduction</span>](<span className=\"hljs-link\">/Ignite/pages/Introduction.html</span>)<br /><span className=\"hljs-bullet\">- </span>[<span className=\"hljs-string\">Page 1</span>](<span className=\"hljs-link\">/Ignite/pages/pages/Page1.html</span>)<br /><span className=\"hljs-bullet\">- </span>[<span className=\"hljs-string\">Page 2</span>](<span className=\"hljs-link\">/Ignite/pages/pages/Page2.html</span>)<br /></code></pre>\n<h2 id=\"sub-headings\">Sub-Headings <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#sub-headings\" aria-hidden=\"true\"></Link></h2>\n<p>You can have sub-lists in your navigation which will create nested navigation lists.</p>\n<pre><code className=\"language-markdown\"><span className=\"hljs-bullet\">- </span>[<span className=\"hljs-string\">Introduction</span>](<span className=\"hljs-link\">/Ignite/pages/Introduction.html</span>)<br />  - [<span className=\"hljs-string\">Page 1</span>](<span className=\"hljs-link\">/Ignite/pages/pages/Page1.html</span>)<br />  - [<span className=\"hljs-string\">Page 2</span>](<span className=\"hljs-link\">/Ignite/pages/pages/Page2.html</span>)<br /></code></pre>\n<h2 id=\"list-title\">List Title <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#list-title\" aria-hidden=\"true\"></Link></h2>\n<p>You can add context to your navigation by adding paragraphs between sections of your index file.</p>\n<p><strong><em>There must be an empty line between list sections</em></strong></p>\n<pre><code className=\"language-markdown\">Intro<br /><br /><span className=\"hljs-bullet\">- </span>[<span className=\"hljs-string\">Introduction</span>](<span className=\"hljs-link\">/Ignite/pages/Introduction.html</span>)<br />  - [<span className=\"hljs-string\">Page 1</span>](<span className=\"hljs-link\">/Ignite/pages/pages/Page1.html</span>)<br />  - [<span className=\"hljs-string\">Page 2</span>](<span className=\"hljs-link\">/Ignite/pages/pages/Page2.html</span>)<br /><br />Some Other Nav Section<br /><br /><span className=\"hljs-bullet\">- </span>[<span className=\"hljs-string\">Something Else</span>](<span className=\"hljs-link\">/Ignite/pages/Bees.html</span>)<br />  ...<br /></code></pre>\n<h2 id=\"multiple-top-level-tags\">Multiple Top Level Tags <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#multiple-top-level-tags\" aria-hidden=\"true\"></Link></h2>\n<p>You can split your documentation up into multiple top level sections. To have multiple top level headings you will need to also have multiple index files in multiple folders.</p>\n<p>Each index file will used as the sidebar and the first link in the sidebar as it's default page.</p>\n<pre><code className=\"language-text\">folder1/<br />  index.md<br />  other.md<br />folder2/<br />  index.md<br />  another.md<br /></code></pre>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"navItems\"</span>: &#123;<br />    <span className=\"hljs-attr\">\"root\"</span>: <span className=\"hljs-string\">\"path/to/folder\"</span>,<br />    <span className=\"hljs-attr\">\"Name to Display in NavBar\"</span>: <span className=\"hljs-string\">\"path/to/folder\"</span><br />  &#125;<br />&#125;<br /></code></pre>\n\n        <article className=\"message column is-warning is-three-fifths is-offset-one-fifth\">\n          \n          <div className=\"message-body\">\n      <p>⚠️ Root should point to the default folder.</p>\n<p>⚠️ All index files must have the same name specified in <Link currentPage={(this && this.props || props).currentPage} to=\"/Ignite/pages/Options.html#index-index-i\">configuration</Link>.</p>\n<p>⚠️ All paths to NavItems use <Link currentPage={(this && this.props || props).currentPage} to=\"/Ignite/pages/Options.html#source-src-s\">source folder</Link> as root.</p>\n\n        </div>\n      </article>\n    \n        <article className=\"message column is-success is-three-fifths is-offset-one-fifth\">\n          \n          <div className=\"message-body\">\n      <p>If you aren't using GitHub pages make sure to redirect 404s to the 404.html.</p>\n\n        </div>\n      </article>\n    \n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}