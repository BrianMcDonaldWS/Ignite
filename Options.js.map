{"version":3,"sources":["webpack:///./docs/pages/Options.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","currentPage","target","_ref5","_ref6","id","aria-hidden","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","_ref40","_ref41"],"mappings":"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","file":"Options.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/Ignite/','pages/Options.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Options</h1>\n<p>All options can be used as CLI arguments, declared in the package.json, or your project can have an <code>.igniterc</code>. This file can be at the project root or anywhere <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/davidtheclark/cosmiconfig\" className=\"external-link\">cosmiconfig</Link> can find it.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"ignite\"</span>: &#123;<br />    <span className=\"hljs-attr\">\"src\"</span>: <span className=\"hljs-string\">\"some/path/to/folder\"</span><br />  &#125;<br />&#125;<br /></code></pre>\n<p><div className=\"table-of-contents\"><ul><li><Link currentPage={(this && this.props || props).currentPage} to=\"#source-(--src%2C--s)\">Source (--src, -s)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#destination-(--dst%2C--d)\">Destination (--dst, -d)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#index-(--index%2C--i)\">Index (--index, -i)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#static-(--static)\">Static (--static)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#plugins-(--plugins)\">Plugins (--plugins)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#publish-(--publish)\">Publish (--publish)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#watch-(--watch%2C--w)\">Watch (--watch, -w)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#port-(--port%2C--p)\">Port (--port, -p)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#title-(--title%2C--t)\">Title (--title, -t)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#logo-(--logo)\">Logo (--logo)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#github-url-(--githuburl)\">GitHub URL (--githubURL)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#code-highlight-style-(--codestyle)\">Code Highlight Style (--codeStyle)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#app-color-(--color%2C--c)\">App Color (--color, -c)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#custom-head-(--customhead)\">Custom Head (--customHead)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#favicon-(--favicon)\">Favicon (--favicon)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#favicon-type-(--favicontype)\">Favicon Type (--faviconType)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#utility-commands\">Utility Commands</Link><ul><li><Link currentPage={(this && this.props || props).currentPage} to=\"#version-(--version%2C--v)\">Version (--version, -v)</Link></li><li><Link currentPage={(this && this.props || props).currentPage} to=\"#help-(--help--h)\">Help (--help -h)</Link></li></ul></li></ul></div></p>\n<hr />\n<h2 id=\"source-(--src%2C--s)\">Source (--src, -s) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#source-(--src%2C--s)\" aria-hidden=\"true\"></Link></h2>\n<p>Source folder to search for markdown files in</p>\n<pre><code className=\"language-bash\">ignite --src docs<br /></code></pre>\n<h2 id=\"destination-(--dst%2C--d)\">Destination (--dst, -d) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#destination-(--dst%2C--d)\" aria-hidden=\"true\"></Link></h2>\n<p>Folder to output bundled documentation website.</p>\n<pre><code className=\"language-bash\">ignite --dst _ignite<br /></code></pre>\n<h2 id=\"index-(--index%2C--i)\">Index (--index, -i) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#index-(--index%2C--i)\" aria-hidden=\"true\"></Link></h2>\n<p>Fill to be used as the index of your website. Is also used as the sidebar. This file should be located in the docs folder</p>\n<pre><code className=\"language-bash\">ignite --index index.md<br /></code></pre>\n<h2 id=\"static-(--static)\">Static (--static) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#static-(--static)\" aria-hidden=\"true\"></Link></h2>\n<p>Build the documentation website as individual static html pages.</p>\n<pre><code className=\"language-bash\">ignite --static<br /></code></pre>\n<h2 id=\"plugins-(--plugins)\">Plugins (--plugins) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#plugins-(--plugins)\" aria-hidden=\"true\"></Link></h2>\n<p>A list of plugins (package names or functions) to render your documentation with.</p>\n<pre><code className=\"language-bash\">ignite --plugins markdown-it-emoji markdown-it-video<br /></code></pre>\n\n        <article className=\"message column is-success is-three-fifths is-offset-one-fifth has-text-centered\">\n          \n          <div className=\"message-body\">\n      <p>More on including Ignite plugins <Link currentPage={(this && this.props || props).currentPage} to=\"/Ignite/pages/IgnitePlugins.html#register-plugin\">here</Link></p>\n\n        </div>\n      </article>\n    <h2 id=\"publish-(--publish)\">Publish (--publish) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#publish-(--publish)\" aria-hidden=\"true\"></Link></h2>\n<p>Publish the docs to the githubURL. Must <Link currentPage={(this && this.props || props).currentPage} to=\"/Ignite/pages/Publishing.html\">setup</Link></p>\n<pre><code className=\"language-bash\">ignite --publish<br /></code></pre>\n<h2 id=\"watch-(--watch%2C--w)\">Watch (--watch, -w) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#watch-(--watch%2C--w)\" aria-hidden=\"true\"></Link></h2>\n<p>Build the documentation website and serve it on localhost. Default port is 8008.</p>\n<pre><code className=\"language-bash\">ignite --watch<br /></code></pre>\n<h2 id=\"port-(--port%2C--p)\">Port (--port, -p) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#port-(--port%2C--p)\" aria-hidden=\"true\"></Link></h2>\n<p>Port to start the documentation website on.</p>\n<pre><code className=\"language-bash\">ignite --port 1337<br /></code></pre>\n<h2 id=\"title-(--title%2C--t)\">Title (--title, -t) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#title-(--title%2C--t)\" aria-hidden=\"true\"></Link></h2>\n<p>Title of the docs. Usually what you are documenting. Used in the navigation bar.</p>\n<pre><code className=\"language-bash\">ignite --title <span className=\"hljs-string\">'My Cool Docs'</span><br /></code></pre>\n<h2 id=\"logo-(--logo)\">Logo (--logo) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#logo-(--logo)\" aria-hidden=\"true\"></Link></h2>\n<p>Logo for app. Displayed in title bar.</p>\n<pre><code className=\"language-bash\">ignite --logo <span className=\"hljs-string\">'logo.svg'</span><br /></code></pre>\n<h2 id=\"github-url-(--githuburl)\">GitHub URL (--githubURL) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#github-url-(--githuburl)\" aria-hidden=\"true\"></Link></h2>\n<p>If present includes a link to github. Usually where you store the source code for what you're documenting.</p>\n<pre><code className=\"language-bash\">ignite --githubURL https://github.com/Team/Project<br /></code></pre>\n<h2 id=\"code-highlight-style-(--codestyle)\">Code Highlight Style (--codeStyle) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#code-highlight-style-(--codestyle)\" aria-hidden=\"true\"></Link></h2>\n<p>Code highlight style for code blocks. Can use any of <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/isagalaev/highlight.js/tree/master/src/styles\" className=\"external-link\">these</Link> styles</p>\n<pre><code className=\"language-bash\">ignite --codeStyle foundation<br /></code></pre>\n<h2 id=\"app-color-(--color%2C--c)\">App Color (--color, -c) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#app-color-(--color%2C--c)\" aria-hidden=\"true\"></Link></h2>\n<p>Specify the color to use throughout the app.</p>\n<pre><code className=\"language-bash\">ignite --color <span className=\"hljs-string\">'cadetblue'</span><br />ignite --color <span className=\"hljs-string\">'#f44336'</span><br /></code></pre>\n<h2 id=\"custom-head-(--customhead)\">Custom Head (--customHead) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#custom-head-(--customhead)\" aria-hidden=\"true\"></Link></h2>\n<p>Specify a string to inject into the head of the page.</p>\n<pre><code className=\"language-bash\">ignite --customHead <span className=\"hljs-string\">'&lt;style&gt;* &#123; color: red; &#125;&lt;/style&gt;'</span><br /></code></pre>\n<h2 id=\"favicon-(--favicon)\">Favicon (--favicon) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#favicon-(--favicon)\" aria-hidden=\"true\"></Link></h2>\n<p>Favicon for the website</p>\n<pre><code className=\"language-bash\">ignite --favicon <span className=\"hljs-string\">'favicon.png'</span><br /></code></pre>\n<h2 id=\"favicon-type-(--favicontype)\">Favicon Type (--faviconType) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#favicon-type-(--favicontype)\" aria-hidden=\"true\"></Link></h2>\n<p>Image type of the favicon</p>\n<pre><code className=\"language-bash\">ignite --favicon <span className=\"hljs-string\">'favicon.ico'</span> --faviconType <span className=\"hljs-string\">'image/ico'</span><br /></code></pre>\n<hr />\n<h2 id=\"utility-commands\">Utility Commands <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#utility-commands\" aria-hidden=\"true\"></Link></h2>\n<h3 id=\"version-(--version%2C--v)\">Version (--version, -v) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#version-(--version%2C--v)\" aria-hidden=\"true\"></Link></h3>\n<p>Current version of Ignite.</p>\n<pre><code className=\"language-bash\">ignite --version<br /></code></pre>\n<h3 id=\"help-(--help--h)\">Help (--help -h) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#help-(--help--h)\" aria-hidden=\"true\"></Link></h3>\n<p>List all of these commands an their defaults.</p>\n<pre><code className=\"language-bash\">ignite --<span className=\"hljs-built_in\">help</span><br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}